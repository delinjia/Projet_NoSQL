{
  "paragraphs": [
    {
      "text": "%md\n## 2. Data Pre-processing",
      "user": "anonymous",
      "dateUpdated": "2021-01-18T10:57:06+0100",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>2. Data Pre-processing</h2>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610963814549_250308913",
      "id": "paragraph_1610963814549_250308913",
      "dateCreated": "2021-01-18T10:56:54+0100",
      "dateStarted": "2021-01-18T10:57:06+0100",
      "dateFinished": "2021-01-18T10:57:06+0100",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:2222"
    },
    {
      "text": "import sys.process._\nimport java.net.URL\nimport java.io.File\nimport java.io.File\nimport java.nio.file.{Files, StandardCopyOption}\nimport java.net.HttpURLConnection \nimport org.apache.spark.sql.functions._\n\nimport org.apache.spark.sql.SQLContext\nimport org.apache.spark.input.PortableDataStream\nimport java.util.zip.ZipInputStream\nimport java.io.BufferedReader\nimport java.io.InputStreamReader\n\n// import com.amazonaws.services.s3.AmazonS3Client\n// import com.amazonaws.auth.BasicAWSCredentials\n\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-22T12:14:45+0100",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import sys.process._\nimport java.net.URL\nimport java.io.File\nimport java.io.File\nimport java.nio.file.{Files, StandardCopyOption}\nimport java.net.HttpURLConnection\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.SQLContext\nimport org.apache.spark.input.PortableDataStream\nimport java.util.zip.ZipInputStream\nimport java.io.BufferedReader\nimport java.io.InputStreamReader\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610963802860_1263413575",
      "id": "paragraph_1610963802860_1263413575",
      "dateCreated": "2021-01-18T10:56:42+0100",
      "dateStarted": "2021-01-22T12:14:45+0100",
      "dateFinished": "2021-01-22T12:14:46+0100",
      "status": "FINISHED",
      "$$hashKey": "object:2223"
    },
    {
      "text": "spark.version",
      "user": "anonymous",
      "dateUpdated": "2021-01-20T10:12:37+0100",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mres2\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = 2.4.5\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1611133954541_1957036395",
      "id": "paragraph_1611133954541_1957036395",
      "dateCreated": "2021-01-20T10:12:34+0100",
      "dateStarted": "2021-01-20T10:12:37+0100",
      "dateFinished": "2021-01-20T10:12:38+0100",
      "status": "FINISHED",
      "$$hashKey": "object:2224"
    },
    {
      "text": "    \nval AWS_ID = \"XXX\"\nval AWS_KEY = \"XXX\"\n// la classe AmazonS3Client n'est pas serializable\n// on rajoute l'annotation @transient pour dire a Spark de ne pas essayer de serialiser cette classe et l'envoyer aux executeurs\n@transient val awsClient = new AmazonS3Client(new BasicAWSCredentials(AWS_ID, AWS_KEY))\n\nsc.hadoopConfiguration.set(\"fs.s3a.access.key\", AWS_ID) // mettre votre ID du fichier credentials.csv\nsc.hadoopConfiguration.set(\"fs.s3a.secret.key\", AWS_KEY) // mettre votre secret du fichier credentials.csv\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-18T10:58:49+0100",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610963857759_483030620",
      "id": "paragraph_1610963857759_483030620",
      "dateCreated": "2021-01-18T10:57:37+0100",
      "status": "READY",
      "$$hashKey": "object:2229"
    },
    {
      "text": "%md \n### 2.a  EVENT",
      "user": "anonymous",
      "dateUpdated": "2021-01-18T11:08:47+0100",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>2.a  EVENT</h3>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610964294797_2058339651",
      "id": "paragraph_1610964294797_2058339651",
      "dateCreated": "2021-01-18T11:04:54+0100",
      "dateStarted": "2021-01-18T11:08:47+0100",
      "dateFinished": "2021-01-18T11:08:47+0100",
      "status": "FINISHED",
      "$$hashKey": "object:2230"
    },
    {
      "text": "// Décompression des fichiers et transformation en Data Frame\n\nval textRDD_eng = sc.binaryFiles(\"s3://delin-jia-telecom-msbgd2020/20201001[0-9]*.export.CSV.zip\").\n   flatMap { \n       case (name: String, content: PortableDataStream) =>\n          val zis = new ZipInputStream(content.open)\n          Stream.continually(zis.getNextEntry).\n                takeWhile(_ != null).\n                flatMap { _ =>\n                    val br = new BufferedReader(new InputStreamReader(zis))\n                    Stream.continually(br.readLine()).takeWhile(_ != null)\n                }\n    }\n    \n    \n//exporter fichiers issus de masterfilelist-translation.txt\nval textRDD_translate = sc.binaryFiles(\"s3://delin-jia-telecom-msbgd2020/20201001[0-9]*.translation.export.CSV.zip\"). \n   flatMap {  // decompresser les fichiers\n       case (name: String, content: PortableDataStream) =>\n          val zis = new ZipInputStream(content.open)\n          Stream.continually(zis.getNextEntry).\n                takeWhile(_ != null).\n                flatMap { _ =>\n                    val br = new BufferedReader(new InputStreamReader(zis))\n                    Stream.continually(br.readLine()).takeWhile(_ != null)\n                }\n    }\n    \n\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-22T12:16:08+0100",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610963802415_1090952538",
      "id": "paragraph_1610963802415_1090952538",
      "dateCreated": "2021-01-18T10:56:42+0100",
      "status": "READY",
      "$$hashKey": "object:2231"
    },
    {
      "text": "// Union des datasets en anglais et autres langues\n\nval eventDF = textRDD_eng.union(textRDD_translate).toDF()\n.withColumn(\"GLOBALEVENTID\", split($\"value\", \"\\\\t\").getItem(0))\n.withColumn(\"Day\", split($\"value\", \"\\\\t\").getItem(1))\n.withColumn(\"MonthYear\", split($\"value\", \"\\\\t\").getItem(2))\n.withColumn(\"Year\", split($\"value\", \"\\\\t\").getItem(3))\n.withColumn(\"FractionDate\", split($\"value\", \"\\\\t\").getItem(4))\n.withColumn(\"Actor1Code\", split($\"value\", \"\\\\t\").getItem(5))\n.withColumn(\"Actor1Name\", split($\"value\", \"\\\\t\").getItem(6))\n.withColumn(\"Actor1CountryCode\", split($\"value\", \"\\\\t\").getItem(7))\n.withColumn(\"Actor1KnownGroupCode\", split($\"value\", \"\\\\t\").getItem(8))\n.withColumn(\"Actor1EthnicCode\", split($\"value\", \"\\\\t\").getItem(9))\n.withColumn(\"Actor1Religion1Code\", split($\"value\", \"\\\\t\").getItem(10))\n.withColumn(\"Actor1Religion2Code\", split($\"value\", \"\\\\t\").getItem(11))\n.withColumn(\"Actor1Type1Code\", split($\"value\", \"\\\\t\").getItem(12))\n.withColumn(\"Actor1Type2Code\", split($\"value\", \"\\\\t\").getItem(13))\n.withColumn(\"Actor1Type3Code\", split($\"value\", \"\\\\t\").getItem(14))\n.withColumn(\"Actor2Code\", split($\"value\", \"\\\\t\").getItem(15))\n.withColumn(\"Actor2Name\", split($\"value\", \"\\\\t\").getItem(16))\n.withColumn(\"Actor2CountryCode\", split($\"value\", \"\\\\t\").getItem(17))\n.withColumn(\"Actor2KnownGroupCode\", split($\"value\", \"\\\\t\").getItem(18))\n.withColumn(\"Actor2EthnicCode\", split($\"value\", \"\\\\t\").getItem(19))\n.withColumn(\"Actor2Religion1Code\", split($\"value\", \"\\\\t\").getItem(20))\n.withColumn(\"Actor2Religion2Code\", split($\"value\", \"\\\\t\").getItem(21))\n.withColumn(\"Actor2Type1Code\", split($\"value\", \"\\\\t\").getItem(22))\n.withColumn(\"Actor2Type2Code\", split($\"value\", \"\\\\t\").getItem(23))\n.withColumn(\"Actor2Type3Code\", split($\"value\", \"\\\\t\").getItem(24))\n.withColumn(\"IsRootEvent\", split($\"value\", \"\\\\t\").getItem(25))\n.withColumn(\"EventCode\", split($\"value\", \"\\\\t\").getItem(26))\n.withColumn(\"EventBaseCode\", split($\"value\", \"\\\\t\").getItem(27))\n.withColumn(\"EventRootCode\", split($\"value\", \"\\\\t\").getItem(28))\n.withColumn(\"QuadClass\", split($\"value\", \"\\\\t\").getItem(29))\n.withColumn(\"GoldsteinScale\", split($\"value\", \"\\\\t\").getItem(30))\n.withColumn(\"NumMentions\", split($\"value\", \"\\\\t\").getItem(31))\n.withColumn(\"NumSources\", split($\"value\", \"\\\\t\").getItem(32))\n.withColumn(\"NumArticles\", split($\"value\", \"\\\\t\").getItem(33))\n.withColumn(\"AvgTone\", split($\"value\", \"\\\\t\").getItem(34))\n.withColumn(\"Actor1Geo_Type\", split($\"value\", \"\\\\t\").getItem(35))\n.withColumn(\"Actor1Geo_FullName\", split($\"value\", \"\\\\t\").getItem(36))\n.withColumn(\"Actor1Geo_CountryCode\", split($\"value\", \"\\\\t\").getItem(37))\n.withColumn(\"Actor1Geo_ADM1Code\", split($\"value\", \"\\\\t\").getItem(38))\n.withColumn(\"Actor1Geo_ADM2Code\", split($\"value\", \"\\\\t\").getItem(39))\n.withColumn(\"Actor1Geo_Lat\", split($\"value\", \"\\\\t\").getItem(40))\n.withColumn(\"Actor1Geo_Long\", split($\"value\", \"\\\\t\").getItem(41))\n.withColumn(\"Actor1Geo_FeatureID\", split($\"value\", \"\\\\t\").getItem(42))\n.withColumn(\"Actor2Geo_Type\", split($\"value\", \"\\\\t\").getItem(43))\n.withColumn(\"Actor2Geo_FullName\", split($\"value\", \"\\\\t\").getItem(44))\n.withColumn(\"Actor2Geo_CountryCode\", split($\"value\", \"\\\\t\").getItem(45))\n.withColumn(\"Actor2Geo_ADM1Code\", split($\"value\", \"\\\\t\").getItem(46))\n.withColumn(\"Actor2Geo_ADM2Code\", split($\"value\", \"\\\\t\").getItem(47))\n.withColumn(\"Actor2Geo_Lat\", split($\"value\", \"\\\\t\").getItem(48))\n.withColumn(\"Actor2Geo_Long\", split($\"value\", \"\\\\t\").getItem(49))\n.withColumn(\"Actor2Geo_FeatureID\", split($\"value\", \"\\\\t\").getItem(50))\n.withColumn(\"ActionGeo_Type\", split($\"value\", \"\\\\t\").getItem(51))\n.withColumn(\"ActionGeo_FullName\", split($\"value\", \"\\\\t\").getItem(52))\n.withColumn(\"ActionGeo_CountryCode\", split($\"value\", \"\\\\t\").getItem(53))\n.withColumn(\"ActionGeo_ADM1Code\", split($\"value\", \"\\\\t\").getItem(54))\n.withColumn(\"ActionGeo_ADM2Code\", split($\"value\", \"\\\\t\").getItem(55))\n.withColumn(\"ActionGeo_Lat\", split($\"value\", \"\\\\t\").getItem(56))\n.withColumn(\"ActionGeo_Long\", split($\"value\", \"\\\\t\").getItem(57))\n.withColumn(\"ActionGeo_FeatureID\", split($\"value\", \"\\\\t\").getItem(58))\n.withColumn(\"DATEADDED\", split($\"value\", \"\\\\t\").getItem(59))\n.withColumn(\"SOURCEURL\", split($\"value\", \"\\\\t\").getItem(60))\n.drop($\"value\")",
      "user": "anonymous",
      "dateUpdated": "2021-01-18T12:59:28+0100",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610964571112_284753769",
      "id": "paragraph_1610964571112_284753769",
      "dateCreated": "2021-01-18T11:09:31+0100",
      "status": "READY",
      "$$hashKey": "object:2232"
    },
    {
      "text": "%md \n### 2.b  GKG",
      "user": "anonymous",
      "dateUpdated": "2021-01-18T11:08:15+0100",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>2.b  GKG</h3>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610963804281_1877906313",
      "id": "paragraph_1610963804281_1877906313",
      "dateCreated": "2021-01-18T10:56:44+0100",
      "dateStarted": "2021-01-18T11:08:15+0100",
      "dateFinished": "2021-01-18T11:08:15+0100",
      "status": "FINISHED",
      "$$hashKey": "object:2233"
    },
    {
      "text": "// Décompression des fichiers et transformation en Data Frame\n\nval gkgRDD_eng = sc.binaryFiles(\"s3://delin-jia-telecom-msbgd2020/20201001[0-9]*.gkg.CSV.zip\").\n   flatMap { \n       case (name: String, content: PortableDataStream) =>\n          val zis = new ZipInputStream(content.open)\n          Stream.continually(zis.getNextEntry).\n                takeWhile(_ != null).\n                flatMap { _ =>\n                    val br = new BufferedReader(new InputStreamReader(zis))\n                    Stream.continually(br.readLine()).takeWhile(_ != null)\n                }\n    }\n    \n    \n//exporter fichiers issus de masterfilelist-translation.txt\nval gkgRDD_translate = sc.binaryFiles(\"s3://delin-jia-telecom-msbgd2020/20201001[0-9]*.translation.gkg.CSV.zip\"). \n   flatMap {  // decompresser les fichiers\n       case (name: String, content: PortableDataStream) =>\n          val zis = new ZipInputStream(content.open)\n          Stream.continually(zis.getNextEntry).\n                takeWhile(_ != null).\n                flatMap { _ =>\n                    val br = new BufferedReader(new InputStreamReader(zis))\n                    Stream.continually(br.readLine()).takeWhile(_ != null)\n                }\n    }\n    \n\n// Union des datasets en anglais et autres langues\n\nval gkgDF = gkgRDD_eng.union(gkgRDD_translate).toDF()\n.withColumn(\"GKGRECORDID\", split($\"value\", \"\\\\t\").getItem(0))\n.withColumn(\"DATE\", split($\"value\", \"\\\\t\").getItem(1))\n.withColumn(\"SourceCollectionIdentifier\", split($\"value\", \"\\\\t\").getItem(2))\n.withColumn(\"SourceCommonName\", split($\"value\", \"\\\\t\").getItem(3))\n.withColumn(\"DocumentIdentifier\", split($\"value\", \"\\\\t\").getItem(4))\n.withColumn(\"Counts\", split($\"value\", \"\\\\t\").getItem(5))\n.withColumn(\"V2Counts\", split($\"value\", \"\\\\t\").getItem(6))\n.withColumn(\"Themes\", split($\"value\", \"\\\\t\").getItem(7))\n.withColumn(\"V2Themes\", split($\"value\", \"\\\\t\").getItem(8))\n.withColumn(\"Locations\", split($\"value\", \"\\\\t\").getItem(9))\n.withColumn(\"V2Locations\", split($\"value\", \"\\\\t\").getItem(10))\n.withColumn(\"Persons\", split($\"value\", \"\\\\t\").getItem(11))\n.withColumn(\"V2Persons\", split($\"value\", \"\\\\t\").getItem(12))\n.withColumn(\"Organizations\", split($\"value\", \"\\\\t\").getItem(13))\n.withColumn(\"V2Organizations\", split($\"value\", \"\\\\t\").getItem(14))\n.withColumn(\"V2Tone\", split($\"value\", \"\\\\t\").getItem(15))\n.withColumn(\"Dates\", split($\"value\", \"\\\\t\").getItem(16))\n.withColumn(\"GCAM\", split($\"value\", \"\\\\t\").getItem(17))\n.withColumn(\"SharingImage\", split($\"value\", \"\\\\t\").getItem(18))\n.withColumn(\"RelatedImages\", split($\"value\", \"\\\\t\").getItem(19))\n.withColumn(\"SocialImageEmbeds\", split($\"value\", \"\\\\t\").getItem(20))\n.withColumn(\"SocialVideoEmbeds\", split($\"value\", \"\\\\t\").getItem(21))\n.withColumn(\"Quotations\", split($\"value\", \"\\\\t\").getItem(22))\n.withColumn(\"AllNames\", split($\"value\", \"\\\\t\").getItem(23))\n.withColumn(\"Amounts\", split($\"value\", \"\\\\t\").getItem(24))\n.withColumn(\"TranslationInfo\", split($\"value\", \"\\\\t\").getItem(25))\n.withColumn(\"Extras\", split($\"value\", \"\\\\t\").getItem(26))\n.drop($\"value\")",
      "user": "anonymous",
      "dateUpdated": "2021-01-22T12:16:13+0100",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610964496086_1957880753",
      "id": "paragraph_1610964496086_1957880753",
      "dateCreated": "2021-01-18T11:08:16+0100",
      "status": "READY",
      "$$hashKey": "object:2234"
    },
    {
      "text": "%md \n### 2.c  MENTIONS",
      "user": "anonymous",
      "dateUpdated": "2021-01-18T11:19:07+0100",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>2.c  MENTIONS</h3>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610963805138_541815298",
      "id": "paragraph_1610963805138_541815298",
      "dateCreated": "2021-01-18T10:56:45+0100",
      "dateStarted": "2021-01-18T11:19:07+0100",
      "dateFinished": "2021-01-18T11:19:07+0100",
      "status": "FINISHED",
      "$$hashKey": "object:2235"
    },
    {
      "text": "// Décompression des fichiers et transformation en Data Frame\n\nval mentionRDD_eng = sc.binaryFiles(\"s3://delin-jia-telecom-msbgd2020/20201001[0-9]*.mentions.CSV.zip\").\n   flatMap { \n       case (name: String, content: PortableDataStream) =>\n          val zis = new ZipInputStream(content.open)\n          Stream.continually(zis.getNextEntry).\n                takeWhile(_ != null).\n                flatMap { _ =>\n                    val br = new BufferedReader(new InputStreamReader(zis))\n                    Stream.continually(br.readLine()).takeWhile(_ != null)\n                }\n    }\n    \n    \n//exporter fichiers issus de masterfilelist-translation.txt\nval mentionRDD_translate = sc.binaryFiles(\"s3://delin-jia-telecom-msbgd2020/20201001[0-9]*.translation.mentions.CSV.zip\"). \n   flatMap {  // decompresser les fichiers\n       case (name: String, content: PortableDataStream) =>\n          val zis = new ZipInputStream(content.open)\n          Stream.continually(zis.getNextEntry).\n                takeWhile(_ != null).\n                flatMap { _ =>\n                    val br = new BufferedReader(new InputStreamReader(zis))\n                    Stream.continually(br.readLine()).takeWhile(_ != null)\n                }\n    }\n    \n",
      "user": "anonymous",
      "dateUpdated": "2021-01-22T12:16:25+0100",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610963806242_582876868",
      "id": "paragraph_1610963806242_582876868",
      "dateCreated": "2021-01-18T10:56:46+0100",
      "status": "READY",
      "$$hashKey": "object:2236"
    },
    {
      "text": "//concaténer les RDD et transformer en DataFrame\nval mentionDF = mentionRDD_eng.union(mentionRDD_translate).toDF()\n.withColumn(\"GLOBALEVENTID\", split($\"value\", \"\\\\t\").getItem(0))\n.withColumn(\"EventTimeDate\", split($\"value\", \"\\\\t\").getItem(1))\n.withColumn(\"MentionTimeDate\", split($\"value\", \"\\\\t\").getItem(2))\n.withColumn(\"MentionType\", split($\"value\", \"\\\\t\").getItem(3))\n.withColumn(\"MentionSourceName\", split($\"value\", \"\\\\t\").getItem(4))\n.withColumn(\"MentionIdentifier\", split($\"value\", \"\\\\t\").getItem(5))\n.withColumn(\"SentenceID\", split($\"value\", \"\\\\t\").getItem(6))\n.withColumn(\"Actor1CharOffset\", split($\"value\", \"\\\\t\").getItem(7))\n.withColumn(\"Actor2CharOffset\", split($\"value\", \"\\\\t\").getItem(8))\n.withColumn(\"ActionCharOffset\", split($\"value\", \"\\\\t\").getItem(9))\n.withColumn(\"InRawText\", split($\"value\", \"\\\\t\").getItem(10))\n.withColumn(\"Confidence\", split($\"value\", \"\\\\t\").getItem(11))\n.withColumn(\"MentionDocLen\", split($\"value\", \"\\\\t\").getItem(12))\n.withColumn(\"MentionDocTone\", split($\"value\", \"\\\\t\").getItem(13))\n.withColumn(\"MentionDocTranslationInfo\", split($\"value\", \"\\\\t\").getItem(14))\n.withColumn(\"Extras\", split($\"value\", \"\\\\t\").getItem(15))\n.withColumn(\"Langue_1\", when (col(\"MentionDocTranslationInfo\") === \"\", \":eng\").otherwise(col(\"MentionDocTranslationInfo\")))    \n.withColumn(\"Langue_2\", split($\"Langue_1\", \";\").getItem(0))\n.withColumn(\"Langue\", split($\"Langue_2\", \":\").getItem(1))\n.drop($\"Langue_1\")\n.drop($\"Langue_2\")\n.drop($\"value\")",
      "user": "anonymous",
      "dateUpdated": "2021-01-18T13:00:21+0100",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610965530299_1785598865",
      "id": "paragraph_1610965530299_1785598865",
      "dateCreated": "2021-01-18T11:25:30+0100",
      "status": "READY",
      "$$hashKey": "object:2237"
    },
    {
      "text": "%md\n### 3. REQUETES",
      "user": "anonymous",
      "dateUpdated": "2021-01-18T11:25:26+0100",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>3. REQUETES</h3>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610963807771_1325410881",
      "id": "paragraph_1610963807771_1325410881",
      "dateCreated": "2021-01-18T10:56:47+0100",
      "dateStarted": "2021-01-18T11:25:26+0100",
      "dateFinished": "2021-01-18T11:25:26+0100",
      "status": "FINISHED",
      "$$hashKey": "object:2238"
    },
    {
      "text": "%md\n### 1. afficher le nombre d’articles/évènements qui parlent de COVID qu’il y a eu pour chaque triplet (jour, pays de l’évènement, langue de l’article)",
      "user": "anonymous",
      "dateUpdated": "2021-01-18T11:24:44+0100",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>1. afficher le nombre d’articles/évènements qui parlent de COVID qu’il y a eu pour chaque triplet (jour, pays de l’évènement, langue de l’article)</h3>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610965205163_171866066",
      "id": "paragraph_1610965205163_171866066",
      "dateCreated": "2021-01-18T11:20:05+0100",
      "dateStarted": "2021-01-18T11:24:44+0100",
      "dateFinished": "2021-01-18T11:24:44+0100",
      "status": "FINISHED",
      "$$hashKey": "object:2239"
    },
    {
      "text": "// on réduit d'abord le nombre de colonnes sur chaque DF avant d'effectuer le join pour améliorer les performances \n\nval eventDF_selected  = eventDF.select(\"GLOBALEVENTID\",\"Day\",\"MonthYear\",\"Year\",\"Actor1Name\",\"Actor1CountryCode\",\"Actor2Name\",\"Actor2CountryCode\",\"NumMentions\",\"NumArticles\",\"AvgTone\",\"ActionGeo_FullName\",\"ActionGeo_CountryCode\").cache()\n\nval gkgDF_selected = gkgDF.select(\"GKGRECORDID\",\"DATE\",\"SourceCommonName\",\"DocumentIdentifier\",\"themes\",\"V2Locations\",\"V2Persons\",\"Organizations\",\"V2Tone\",\"TranslationInfo\").cache()\n\nval mentionDF_selected = mentionDF.select(\"GLOBALEVENTID\",\"EventTimeDate\",\"MentionTimeDate\",\"MentionSourceName\",\"MentionIdentifier\",\"MentionDocTone\",\"MentionDocTranslationInfo\",\"Langue\").cache()\n\n \n//JOIN eventDF_selected with mentionDF_selected ON GLOBALEVENTID   \nval event_mention_DF = eventDF_selected.join(mentionDF_selected,\"GlobalEventID\").cache()       // is the .cache() effective here? TBC\n\n//JOIN gkgDF_selected with mentionDF_selected ON DocumentIdentifier = MentionIdentifier \nval mention_gkg_DF = mentionDF_selected.join(gkgDF_selected, mentionDF_selected(\"MentionIdentifier\") ===  gkgDF_selected(\"DocumentIdentifier\")).cache()\n\n//JOIN eventDF_selected with mention_gkg_DF ON GLOBALEVENTID \nval event_mention_gkg_DF = mention_gkg_DF.join(eventDF_selected,\"GlobalEventID\").cache()",
      "user": "anonymous",
      "dateUpdated": "2021-01-22T12:16:55+0100",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610965207358_1676725797",
      "id": "paragraph_1610965207358_1676725797",
      "dateCreated": "2021-01-18T11:20:07+0100",
      "status": "READY",
      "$$hashKey": "object:2240"
    },
    {
      "text": "val R1 = event_mention_gkg_DF\n.select(\"GLOBALEVENTID\", \"DATE\", \"Langue\", \"ActionGeo_CountryCode\", \"themes\")\n.withColumn(\"themes2\",split(regexp_replace($\"themes\", \"(^\\\\[\\\\[\\\\[)|(\\\\]\\\\]\\\\]$)\", \"\"), \";\"))\n.drop(\"themes\")",
      "user": "anonymous",
      "dateUpdated": "2021-01-22T12:17:10+0100",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610971947337_89130854",
      "id": "paragraph_1610971947337_89130854",
      "dateCreated": "2021-01-18T13:12:27+0100",
      "status": "READY",
      "$$hashKey": "object:2241"
    },
    {
      "text": "val R1_themes2 = R1.withColumn(\"themes3\", explode($\"themes2\")).drop(\"themes2\")\n\nval R1_final = R1_themes2\n.filter(col(\"themes3\").contains(\"COVID\"))\n.filter($\"ActionGeo_CountryCode\" !== \"\")\n.groupBy(\"ActionGeo_CountryCode\", \"DATE\", \"Langue\", \"GLOBALEVENTID\")\n.count().sort(desc(\"count\"))\n\nR1_final.show()",
      "user": "anonymous",
      "dateUpdated": "2021-01-22T12:17:49+0100",
      "progress": 40,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+---------------------+--------+------+-------------+-----+\n|ActionGeo_CountryCode|     Day|Langue|GLOBALEVENTID|count|\n+---------------------+--------+------+-------------+-----+\n|                     |20201112|   bul|    954593616|   32|\n|                   BU|20201116|   bul|    954776867|   16|\n|                   BU|20201116|   bul|    954775995|    8|\n|                     |20201116|   bul|    954776865|    8|\n|                   AM|20201121|   rus|    955695825|    4|\n|                   HU|20201130|   rus|    957144621|    4|\n|                   RS|20201119|   rus|    955377420|    4|\n|                   UP|20201102|   ukr|    953716239|    4|\n|                   HU|20201130|   rus|    957144871|    4|\n|                   NZ|20201112|   spa|    954607014|    4|\n|                     |20201119|   eng|    955189523|    3|\n|                   US|20201118|   eng|    954939070|    2|\n|                   IS|20201122|   eng|    955759439|    2|\n|                   MJ|20201121|   eng|    955672283|    2|\n|                   US|20201124|   eng|    956058904|    1|\n|                   US|20201124|   eng|    956058913|    1|\n|                   US|20201118|   eng|    954940806|    1|\n|                   US|20201118|   eng|    955149986|    1|\n|                   IN|20201119|   eng|    955218613|    1|\n|                   BR|20201118|   eng|    954938170|    1|\n+---------------------+--------+------+-------------+-----+\nonly showing top 20 rows\n\n\u001b[1m\u001b[34mq1_test\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [ActionGeo_CountryCode: string, Day: string ... 3 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://192.168.0.18:4040/jobs/job?id=81",
              "$$hashKey": "object:5751"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1611257135585_582001572",
      "id": "paragraph_1611257135585_582001572",
      "dateCreated": "2021-01-21T20:25:35+0100",
      "dateStarted": "2021-01-21T20:25:55+0100",
      "dateFinished": "2021-01-21T20:25:58+0100",
      "status": "FINISHED",
      "$$hashKey": "object:2242"
    },
    {
      "text": "%md \n### 2. pour un pays donné en paramètre, affichez les évènements qui y ont eu place triées par le nombre de mentions (tri décroissant); permettez une agrégation par jour/mois/année",
      "user": "anonymous",
      "dateUpdated": "2021-01-18T11:24:50+0100",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>2. pour un pays donné en paramètre, affichez les évènements qui y ont eu place triées par le nombre de mentions (tri décroissant); permettez une agrégation par jour/mois/année</h3>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610963807413_914770321",
      "id": "paragraph_1610963807413_914770321",
      "dateCreated": "2021-01-18T10:56:47+0100",
      "dateStarted": "2021-01-18T11:24:50+0100",
      "dateFinished": "2021-01-18T11:24:50+0100",
      "status": "FINISHED",
      "$$hashKey": "object:2244"
    },
    {
      "text": "val q2 = event_mention_DF\n.select(\"ActionGeo_CountryCode\",\"Day\",\"MonthYear\",\"Year\",\"GLOBALEVENTID\")\n.groupBy(\"GLOBALEVENTID\", \"Day\", \"MonthYear\", \"Year\", \"ActionGeo_CountryCode\")\n.count()\n.sort($\"count\".desc)\n\nval q2_DF = q2                                                     \n.withColumnRenamed(\"Day\", \"jour\")\n.withColumnRenamed(\"ActionGeo_CountryCode\", \"pays\")\n.withColumnRenamed(\"count\", \"nombre_mentions\")\n.withColumnRenamed(\"GLOBALEVENTID\", \"evenement\")\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-18T14:34:40+0100",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610965207782_672060761",
      "id": "paragraph_1610965207782_672060761",
      "dateCreated": "2021-01-18T11:20:07+0100",
      "status": "READY",
      "$$hashKey": "object:2245"
    },
    {
      "text": "// test: pour un pay donne en parametre\n\nval q2= question2DfFinal.filter(\"ActionGeo_CountryCode == 'US'\").show()",
      "user": "anonymous",
      "dateUpdated": "2021-01-18T13:25:18+0100",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610972699402_2046815681",
      "id": "paragraph_1610972699402_2046815681",
      "dateCreated": "2021-01-18T13:24:59+0100",
      "status": "READY",
      "$$hashKey": "object:2246"
    },
    {
      "text": "%md\n### 3. pour une source de donnés passée en paramètre (gkg.SourceCommonName) affichez les thèmes, personnes, lieux dont les articles de cette sources parlent ainsi que le le nombre d’articles et le ton moyen des articles (pour chaque thème/personne/lieu); permettez une agrégation par jour/mois/année.",
      "user": "anonymous",
      "dateUpdated": "2021-01-18T11:24:57+0100",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>3. pour une source de donnés passée en paramètre (gkg.SourceCommonName) affichez les thèmes, personnes, lieux dont les articles de cette sources parlent ainsi que le le nombre d’articles et le ton moyen des articles (pour chaque thème/personne/lieu); permettez une agrégation par jour/mois/année.</h3>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610965208193_1789522195",
      "id": "paragraph_1610965208193_1789522195",
      "dateCreated": "2021-01-18T11:20:08+0100",
      "dateStarted": "2021-01-18T11:24:57+0100",
      "dateFinished": "2021-01-18T11:24:57+0100",
      "status": "FINISHED",
      "$$hashKey": "object:2248"
    },
    {
      "text": "def split_tone(tone:String ) : Float = {\n    val res = tone split ',' take 1\n    return res(0).toFloat\n}\nval split_tone_udf = udf(split_tone _)\n\ndef compute_month(date:String) : String = {\n    if (date.length > 6)\n        return date.slice(0,6)\n    else\n        return \"\"\n}\nval compute_month_udf = udf(compute_month _)\ndef compute_year(date:String) : String = {\n        if (date.length > 4)\n        return date.slice(0,4)\n    else\n        return \"\"\n}\nval compute_year_udf = udf(compute_year _)",
      "user": "anonymous",
      "dateUpdated": "2021-01-22T12:18:40+0100",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1611314309406_435403373",
      "id": "paragraph_1611314309406_435403373",
      "dateCreated": "2021-01-22T12:18:29+0100",
      "status": "READY",
      "focus": true,
      "$$hashKey": "object:5767"
    },
    {
      "text": "val gkgDF_R3 = gkgDF.select(\"GKGRECORDID\", \"date\", \"SourceCommonName\", \"v2locations\", \"themes\", \"v2tone\", \"Persons\").cache()",
      "user": "anonymous",
      "dateUpdated": "2021-01-22T12:18:24+0100",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610965208821_1245907007",
      "id": "paragraph_1610965208821_1245907007",
      "dateCreated": "2021-01-18T11:20:08+0100",
      "status": "READY",
      "$$hashKey": "object:2249"
    },
    {
      "user": "anonymous",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1611314326277_1649933559",
      "id": "paragraph_1611314326277_1649933559",
      "dateCreated": "2021-01-22T12:18:46+0100",
      "status": "READY",
      "focus": true,
      "$$hashKey": "object:5836",
      "text": "val gkgDF_R3_cleaned = gkgDF_R3.na.drop().withColumn(\"themes2\",split(regexp_replace($\"themes\", \"(^\\\\[\\\\[\\\\[)|(\\\\]\\\\]\\\\]$)\", \"\"), \";\")).withColumn(\"v2tone2\", split_tone_udf($\"v2tone\")).drop(\"themes\", \"v2tone\")",
      "dateUpdated": "2021-01-22T12:18:47+0100"
    },
    {
      "user": "anonymous",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1611314332549_1887404623",
      "id": "paragraph_1611314332549_1887404623",
      "dateCreated": "2021-01-22T12:18:52+0100",
      "status": "READY",
      "focus": true,
      "$$hashKey": "object:5905",
      "text": "val gkgDF_R3_themes = gkgDF_R3_cleaned.withColumn(\"date2\", $\"date\".cast(StringType)).withColumn(\"monthyear\", compute_month_udf($\"date\")).withColumn(\"year\", compute_year_udf($\"date\")).withColumn(\"v2tone3\", $\"v2tone2\".cast(FloatType)).drop(\"date\", \"v2tone2\", \"v2locations\", \"Persons\")\n\nval gkgDF_R3_themes2 = gkgDF_R3_themes.withColumn(\"themes3\", explode($\"themes2\")).drop(\"themes2\")",
      "dateUpdated": "2021-01-22T12:19:03+0100"
    },
    {
      "user": "anonymous",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1611314350967_1317002873",
      "id": "paragraph_1611314350967_1317002873",
      "dateCreated": "2021-01-22T12:19:10+0100",
      "status": "READY",
      "focus": true,
      "$$hashKey": "object:5974",
      "text": "val newNames = Seq(\"gkgrecordid\", \"sourcecommonname\", \"date\", \"monthyear\", \"year\", \"tone\", \"themes\")\nval gkgDF_R3_themes_final = gkgDF_R3_themes2.toDF(newNames: _*)",
      "dateUpdated": "2021-01-22T12:19:12+0100"
    },
    {
      "user": "anonymous",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1611314376527_462748739",
      "id": "paragraph_1611314376527_462748739",
      "dateCreated": "2021-01-22T12:19:36+0100",
      "status": "READY",
      "focus": true,
      "$$hashKey": "object:6066",
      "text": "val gkgDF_R3_persons1 = gkgDF_R3.na.drop().withColumn(\"Persons\",split(regexp_replace($\"persons\", \"(^\\\\[\\\\[\\\\[)|(\\\\]\\\\]\\\\]$)\", \"\"), \";\")).withColumn(\"v2tone2\", split_tone_udf($\"v2tone\")).drop(\"v2locations\", \"v2tone\", \"themes\")",
      "dateUpdated": "2021-01-22T12:19:47+0100"
    },
    {
      "user": "anonymous",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1611314393152_742105400",
      "id": "paragraph_1611314393152_742105400",
      "dateCreated": "2021-01-22T12:19:53+0100",
      "status": "READY",
      "focus": true,
      "$$hashKey": "object:6141",
      "text": "val gkgDF_R3_persons2 = gkgDF_R3_persons1.withColumn(\"date2\", $\"date\".cast(StringType)).withColumn(\"monthyear\", compute_month_udf($\"date\")).withColumn(\"year\", compute_year_udf($\"date\")).withColumn(\"v2tone3\", $\"v2tone2\".cast(FloatType)).drop(\"date\", \"v2tone2\")",
      "dateUpdated": "2021-01-22T12:19:54+0100"
    },
    {
      "user": "anonymous",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1611314400956_1540461109",
      "id": "paragraph_1611314400956_1540461109",
      "dateCreated": "2021-01-22T12:20:00+0100",
      "status": "READY",
      "focus": true,
      "$$hashKey": "object:6213",
      "text": "val gkgDF_R3_persons3 = gkgDF_R3_persons2.withColumn(\"persons3\", explode($\"persons\")).drop(\"persons\")",
      "dateUpdated": "2021-01-22T12:20:02+0100"
    },
    {
      "user": "anonymous",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1611314407022_905261612",
      "id": "paragraph_1611314407022_905261612",
      "dateCreated": "2021-01-22T12:20:07+0100",
      "status": "READY",
      "focus": true,
      "$$hashKey": "object:6282",
      "text": "val newNames = Seq(\"gkgrecordid\", \"sourcecommonname\", \"date\", \"monthyear\", \"year\", \"tone\", \"persons\")\nval gkgDF_R3_persons_final = gkgDF_R3_persons3.toDF(newNames: _*)\n",
      "dateUpdated": "2021-01-22T12:20:09+0100"
    },
    {
      "user": "anonymous",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1611314409663_1205625265",
      "id": "paragraph_1611314409663_1205625265",
      "dateCreated": "2021-01-22T12:20:09+0100",
      "status": "READY",
      "focus": true,
      "$$hashKey": "object:6351",
      "text": "val gkgDF_R3_locations1 = gkgDF_R3.na.drop().withColumn(\"locations\",split(regexp_replace($\"v2locations\", \"(^\\\\[\\\\[\\\\[)|(\\\\]\\\\]\\\\]$)\", \"\"), \";\")).withColumn(\"v2tone2\", split_tone_udf($\"v2tone\")).drop(\"v2locations\", \"v2tone\", \"themes\", \"Persons\")",
      "dateUpdated": "2021-01-22T12:20:19+0100"
    },
    {
      "user": "anonymous",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1611314425710_942615329",
      "id": "paragraph_1611314425710_942615329",
      "dateCreated": "2021-01-22T12:20:25+0100",
      "status": "READY",
      "focus": true,
      "$$hashKey": "object:6420",
      "text": "val gkgDF_R3_locations2 = gkgDF_R3_locations1.withColumn(\"date2\", $\"date\".cast(StringType)).withColumn(\"monthyear\", compute_month_udf($\"date\")).withColumn(\"year\", compute_year_udf($\"date\")).withColumn(\"v2tone3\", $\"v2tone2\".cast(FloatType)).drop(\"date\", \"v2tone2\", \"themes2\")",
      "dateUpdated": "2021-01-22T12:20:26+0100"
    },
    {
      "user": "anonymous",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1611314426739_1497189717",
      "id": "paragraph_1611314426739_1497189717",
      "dateCreated": "2021-01-22T12:20:26+0100",
      "status": "READY",
      "focus": true,
      "$$hashKey": "object:6489",
      "text": "val gkgDF_R3_location3 = gkgDF_R3_locations2.withColumn(\"locations3\", explode($\"locations\")).drop(\"locations\")",
      "dateUpdated": "2021-01-22T12:20:33+0100"
    },
    {
      "user": "anonymous",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1611314433666_1486421782",
      "id": "paragraph_1611314433666_1486421782",
      "dateCreated": "2021-01-22T12:20:33+0100",
      "status": "READY",
      "focus": true,
      "$$hashKey": "object:6558",
      "text": "def split_location(location:String) : String = {\n    if (location == null) {\n        return \"\"\n    }\n    else if (location.length >= 1 && (location contains \"#\")) {\n        var res = location split '#'\n        var res2 = res(1)\n        if (location contains \",\") {\n            var res3 = res2 split ','\n            var res4 = res3(0)\n            return res4\n        }\n        return res2\n    }\n    else {\n        return location\n    }\n}\nval split_location_udf = udf(split_location _)\n\nval gkgDF_R3_location4 = gkgDF_R3_location3.na.drop().withColumn(\"locations4\", split_location_udf($\"locations3\")).drop(\"locations3\")",
      "dateUpdated": "2021-01-22T12:20:43+0100"
    },
    {
      "user": "anonymous",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1611314449916_241633320",
      "id": "paragraph_1611314449916_241633320",
      "dateCreated": "2021-01-22T12:20:49+0100",
      "status": "READY",
      "focus": true,
      "$$hashKey": "object:6627",
      "text": "val newNames = Seq(\"gkgrecordid\", \"sourcecommonname\", \"date\", \"monthyear\", \"year\", \"tone\", \"location\")\nval gkgDF_R3_locations_final = gkgDF_R3_location4.toDF(newNames: _*)",
      "dateUpdated": "2021-01-22T12:20:51+0100"
    },
    {
      "user": "anonymous",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1611314456467_375833746",
      "id": "paragraph_1611314456467_375833746",
      "dateCreated": "2021-01-22T12:20:56+0100",
      "status": "READY",
      "focus": true,
      "$$hashKey": "object:6696",
      "text": "val q3_DF_persons = q3_persons.groupBy(\"date\",\"SourceCommonName\",\"persons_2\").agg(count($\"GKGRECORDID\").cast(\"int\").as(\"nombre_articles\"),avg($\"tone\").as(\"ton_moyen\"))\n\nval q3_DF_locations = q3_locations.groupBy(\"date\",\"SourceCommonName\",\"locations_2\").agg(count($\"GKGRECORDID\").cast(\"int\").as(\"nombre_articles\"),avg($\"tone\").as(\"ton_moyen\"))\n\nval q3_DF_themes = q3_themes.groupBy(\"date\",\"SourceCommonName\",\"themes_2\").agg(count($\"GKGRECORDID\").cast(\"int\").as(\"nombre_articles\"),avg($\"tone\").as(\"ton_moyen\"))",
      "dateUpdated": "2021-01-22T12:20:57+0100"
    },
    {
      "text": "%md\n## 3.  Ecriture des dataframes dans Cassandra",
      "user": "anonymous",
      "dateUpdated": "2021-01-18T14:13:44+0100",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>3.  Ecriture des dataframes dans Cassandra</h2>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610965500481_1158111966",
      "id": "paragraph_1610965500481_1158111966",
      "dateCreated": "2021-01-18T11:25:00+0100",
      "dateStarted": "2021-01-18T14:13:44+0100",
      "dateFinished": "2021-01-18T14:13:44+0100",
      "status": "FINISHED",
      "$$hashKey": "object:2256"
    },
    {
      "text": "%md\n### Création de la table 1",
      "user": "anonymous",
      "dateUpdated": "2021-01-18T14:29:31+0100",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Création de la table 1</h3>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610976568009_101841286",
      "id": "paragraph_1610976568009_101841286",
      "dateCreated": "2021-01-18T14:29:28+0100",
      "dateStarted": "2021-01-18T14:29:31+0100",
      "dateFinished": "2021-01-18T14:29:31+0100",
      "status": "FINISHED",
      "$$hashKey": "object:2257"
    },
    {
      "text": "\nCassandraConnector(sc.getConf).withSessionDo { session =>\n      session.execute(\n          \"\"\"\n             DROP KEYSPACE gdelt;\n          \"\"\"\n          )\n      session.execute(\n          \"\"\"\n             CREATE KEYSPACE IF NOT EXISTS gdelt\n             WITH REPLICATION = {'class': 'SimpleStrategy', 'replication_factor': 3 };\n          \"\"\")\n          session.execute(\n          \"\"\"\n             CREATE TABLE IF NOT EXISTS gdelt.q1(\n                evenement int,\n                date text,\n                pays text,\n                langue_article text,\n                nombre_articles int,\n              PRIMARY KEY (evenement));\n          \"\"\"\n        )\n}\n\nq1_DF.write\n      .cassandraFormat(\"q1\", \"gdelt\")\n      .mode(org.apache.spark.sql.SaveMode.Overwrite)\n      .options(Map(\"confirm.truncate\" -> \"true\"))\n      .save()\n      \nval req1 = spark.read\n      .cassandraFormat(\"q1\", \"gdelt\")\n      .load()\n      \nreq1.createOrReplaceTempView(\"q1\")\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-21T14:57:36+0100",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "<console>:60: \u001b[31merror: \u001b[0mnot found: value q1_DF\nq1_DF.write\n^\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610972569372_1532799688",
      "id": "paragraph_1610972569372_1532799688",
      "dateCreated": "2021-01-18T13:22:49+0100",
      "dateStarted": "2021-01-20T10:53:18+0100",
      "dateFinished": "2021-01-20T10:53:18+0100",
      "status": "ERROR",
      "$$hashKey": "object:2258"
    },
    {
      "text": "z.show(spark.sql(\"\"\" SELECT * FROM q1 LIMIT 10 \"\"\"))",
      "user": "anonymous",
      "dateUpdated": "2021-01-18T14:29:17+0100",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610975413743_1901877203",
      "id": "paragraph_1610975413743_1901877203",
      "dateCreated": "2021-01-18T14:10:13+0100",
      "status": "READY",
      "$$hashKey": "object:2259"
    },
    {
      "text": "%md\n### Création de la table 2",
      "user": "anonymous",
      "dateUpdated": "2021-01-18T14:29:25+0100",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Création de la table 2</h3>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610975412977_728206692",
      "id": "paragraph_1610975412977_728206692",
      "dateCreated": "2021-01-18T14:10:12+0100",
      "dateStarted": "2021-01-18T14:29:25+0100",
      "dateFinished": "2021-01-18T14:29:25+0100",
      "status": "FINISHED",
      "$$hashKey": "object:2260"
    },
    {
      "text": "CassandraConnector(sc.getConf).withSessionDo { session =>\n          session.execute (\n          \"\"\"\n             CREATE TABLE IF NOT EXISTS gdelt.q2(\n                jour int,\n                pays text,\n                evenement int,\n                nombre_mentions int,\n             PRIMARY KEY ((pays, evenement), nombre_mentions));\n          \"\"\"\n        )\n}\n\nq2_DF.write\n      .cassandraFormat(\"q2\", \"gdelt\")\n      .mode(org.apache.spark.sql.SaveMode.Overwrite)\n      .options(Map(\"confirm.truncate\" -> \"true\"))\n      .save()\n      \nval req2 = spark.read\n      .cassandraFormat(\"q2\", \"gdelt\")\n      .load()\n      \nreq2.createOrReplaceTempView(\"q2\")",
      "user": "anonymous",
      "dateUpdated": "2021-01-18T14:36:39+0100",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610976587212_607394829",
      "id": "paragraph_1610976587212_607394829",
      "dateCreated": "2021-01-18T14:29:47+0100",
      "status": "READY",
      "$$hashKey": "object:2261"
    },
    {
      "text": "z.show(spark.sql(\"\"\" SELECT * FROM q2 LIMIT 10 \"\"\"))\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-18T14:37:14+0100",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610976588450_1663763274",
      "id": "paragraph_1610976588450_1663763274",
      "dateCreated": "2021-01-18T14:29:48+0100",
      "status": "READY",
      "$$hashKey": "object:2262"
    },
    {
      "text": "%md\n### Création de la table 3",
      "user": "anonymous",
      "dateUpdated": "2021-01-18T14:29:45+0100",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Création de la table 3</h3>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610976581711_1063447178",
      "id": "paragraph_1610976581711_1063447178",
      "dateCreated": "2021-01-18T14:29:41+0100",
      "dateStarted": "2021-01-18T14:29:45+0100",
      "dateFinished": "2021-01-18T14:29:45+0100",
      "status": "FINISHED",
      "$$hashKey": "object:2263"
    },
    {
      "text": "// TABLE REQUETE 3 PERSONS\n\nCassandraConnector(sc.getConf).withSessionDo { session =>\n          session.execute (\n          \"\"\"\n             CREATE TABLE IF NOT EXISTS gdelt.q3_persons(\n                date int,\n                SourceCommonName text,\n                persons_2 text,\n                nombre_articles int,\n                ton_moyen double,\n             PRIMARY KEY (SourceCommonName, date));\n          \"\"\"\n        )\n}\n\nq3_DF_persons.write\n      .cassandraFormat(\"q3_persons\", \"gdelt\")\n      .mode(org.apache.spark.sql.SaveMode.Overwrite)\n      .options(Map(\"confirm.truncate\" -> \"true\"))\n      .save()\n      \nval req3_persons = spark.read\n      .cassandraFormat(\"q3_persons\", \"gdelt\")\n      .load()\n      \nreq3_persons.createOrReplaceTempView(\"vue_req3_persons\")",
      "user": "anonymous",
      "dateUpdated": "2021-01-18T14:41:29+0100",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610976581366_102527872",
      "id": "paragraph_1610976581366_102527872",
      "dateCreated": "2021-01-18T14:29:41+0100",
      "status": "READY",
      "$$hashKey": "object:2264"
    },
    {
      "text": "// TABLE REQUETE 3 LOCATIONS\nCassandraConnector(sc.getConf).withSessionDo { session =>\n          session.execute (\n          \"\"\"\n             CREATE TABLE IF NOT EXISTS gdelt.q3_locations(\n                date int,\n                SourceCommonName text,\n                locations_2 text,\n                nombre_articles int,\n                ton_moyen double,\n             PRIMARY KEY (SourceCommonName, date));\n          \"\"\"\n        )\n}\n\nq3_DF_locations.write\n      .cassandraFormat(\"q3_locations\", \"gdelt\")\n      .mode(org.apache.spark.sql.SaveMode.Overwrite)\n      .options(Map(\"confirm.truncate\" -> \"true\"))\n      .save()\n      \nval req3_locations = spark.read\n      .cassandraFormat(\"q3_locations\", \"gdelt\")\n      .load()\n      \nreq3_locations.createOrReplaceTempView(\"vue_req3_locations\")\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-18T14:42:42+0100",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610976580081_793431752",
      "id": "paragraph_1610976580081_793431752",
      "dateCreated": "2021-01-18T14:29:40+0100",
      "status": "READY",
      "$$hashKey": "object:2265"
    },
    {
      "text": "// TABLE REQUETE 3 THEMES\nCassandraConnector(sc.getConf).withSessionDo { session =>\n          session.execute(\n              \"\"\"\n              DROP TABLE gdelt.requete3_themes\n              \"\"\"\n              )\n          session.execute (\n          \"\"\"\n             CREATE TABLE IF NOT EXISTS gdelt.q3_themes(\n                date int,\n                SourceCommonName text,\n                themes_2 text,\n                nombre_articles int,\n                ton_moyen double,\n             PRIMARY KEY (SourceCommonName, date));\n          \"\"\"\n        )\n}\n\nq3_DF_themes.write\n      .cassandraFormat(\"q3_themes\", \"gdelt\")\n      .mode(org.apache.spark.sql.SaveMode.Overwrite)\n      .options(Map(\"confirm.truncate\" -> \"true\"))\n      .save()\n      \nval req3_themes = spark.read\n      .cassandraFormat(\"q3_themes\", \"gdelt\")\n      .load()\n      \nreq3_themes.createOrReplaceTempView(\"vue_req3_themes\")",
      "user": "anonymous",
      "dateUpdated": "2021-01-18T14:43:10+0100",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610972573517_1446457005",
      "id": "paragraph_1610972573517_1446457005",
      "dateCreated": "2021-01-18T13:22:53+0100",
      "status": "READY",
      "$$hashKey": "object:2266"
    },
    {
      "text": "z.show(spark.sql(\"\"\" SELECT * FROM vue_req3_persons LIMIT 10 \"\"\"))",
      "user": "anonymous",
      "dateUpdated": "2021-01-18T14:44:08+0100",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610972575257_878787762",
      "id": "paragraph_1610972575257_878787762",
      "dateCreated": "2021-01-18T13:22:55+0100",
      "status": "READY",
      "$$hashKey": "object:2267"
    },
    {
      "text": "",
      "user": "anonymous",
      "dateUpdated": "2021-01-21T19:18:22+0100",
      "progress": 0,
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1610977410133_648010642",
      "id": "paragraph_1610977410133_648010642",
      "dateCreated": "2021-01-18T14:43:30+0100",
      "status": "READY",
      "$$hashKey": "object:2268"
    }
  ],
  "name": "2020_Projet GDELT_Exploration",
  "id": "2FYAKJCF1",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {},
  "path": "/2020_Projet GDELT_Exploration"
}